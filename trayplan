import numpy as np
import pylab as pl
#import pylab
z=[0]
q=[0]
# img=pl.imread("espacio.jpg")
estado=True
while estado:
    respuesta=raw_input("indique la cantidad de energia para el sistema que va a simular, si no sabe que escribir escriba ayuda ")
    if respuesta=="ayuda":
        print """
    Escriba:
    positiva: para ver una trayectoria hiperbolica
    neutra: para ver una trayectoria parabolica
    negativa: para ver una trayectoria eliptica
    exacta negativa: para ver una trayectoria circular"""
    
    elif respuesta=="positiva":	
        x=np.arange(-9,9,0.1)
        # img=pl.imread("espacio.jpg")
        
        q=[13]
        fig, ax= pl.subplots()
        y=np.sqrt((36+9*(x**2))/4)
        line1, =ax.plot(x[0],y[0],"white")
        line2, =ax.plot(x[0],y[0],"blue",marker='o',markersize=10,label="$UFO$")
        # ax.imshow(img,extent=(-9,9,0,16))
        ax.plot(z,q,"yellow",marker='o',markersize=30,label="$sol$")
        ax.set_ylim(0,16)
        
        ax.set_xlim(-9,9)
        ax.legend(framealpha=0.0)
        for i in range(len(x)):
            line1.set_data(x[:i],y[:i])
            line2.set_data(x[i],y[i])
            pl.pause(0.0001)
            
        pl.close()
    
    

    elif respuesta=="neutra":
        x=np.arange(-3,3,0.05)
        fig, ax= pl.subplots()
        q=[0.5]
        y=(2*x**2)
        # ax.imshow(img,extent=(-10,10,0,18))
        line1, =ax.plot(x[0],y[0],"white")
        line2, =ax.plot(x[0],y[0],"red",marker='o',markersize=4,label="$cometa$")
        ax.plot(z,q,marker='o',markersize=10,color="yellow",label="$sol$")
        ax.set_ylim(0,18)
        ax.set_xlim(-10,10)
        ax.legend(framealpha=0.0)
        for i in range(len(x)):
            line1.set_data(x[:i],y[:i])
            line2.set_data(x[i],y[i])
            pl.pause(0.0001)
            
        pl.close()
            
    

    elif respuesta=="negativa":
        x=np.arange(0,4,0.04)
        q=np.arange(0,1,0.01)
        q1=1-q
        k=np.sqrt(0.25-(q-0.5)**2)
        x2=4-x
        z=[2]
        q=[-2.23]
        fig, ax= pl.subplots()
        y=np.sqrt((36-9*((x-2)**2))/4)
        y2=-1*(np.sqrt((36-9*((x-2)**2))/4))
        
        x3=x+q1-0.5
        x4=3.5-x3+0.5
        y3=y+k
        y4=y2-k
        # ax.imshow(img,extent=(-0.6,4.1,-3.6,3.6))
        line1, =ax.plot(x[0],y[0],"white")
        line2, =ax.plot(x[0],y[0],"blue",marker='o',markersize=10,label="$tierra$")
        line3, =ax.plot(x2[0],y2[0],"white")
        line4, =ax.plot(x3[0],y3[0],"white",marker="o",markersize=5)
        line5, =ax.plot(x3[0],y3[0],"white")
        line6, =ax.plot(x4[0],y4[0],"white")
        ax.plot(z,q,marker='o',markersize=30,color="yellow",label="$sol$")
        ax.set_ylim(-3.6,3.6)
        ax.set_xlim(-0.6,4.1)
        ax.legend(framealpha=0.0)
        for i in range(len(x)):
            line1.set_data(x[:i],y[:i])
            line2.set_data(x[i],y[i])
            line5.set_data(x3[:i],y3[:i])
            line4.set_data(x3[i],y3[i])
            pl.pause(0.0001)
        for i in range(len(x)):
            line3.set_data(x2[:i],y2[:i])
            line2.set_data(x2[i],y2[i])
            line4.set_data(x4[i],y4[i])
            line6.set_data(x4[:i],y4[:i])
            pl.pause(0.0001)
            
        pl.close()
        
            

    elif respuesta=="exacta negativa":
        z=[5]
        q=[0]
        x=np.arange(0,10,0.05)
        x2=10-x
            
       
        fig, ax= pl.subplots()
        # ax.imshow(img,extent=(0,10.1,-5.1,5.1))
        pl.plot(z,q,marker='o',markersize=20,color="yellow",label="$estrella$")
        y=np.sqrt(25-(x-5)**2)
        y2=(np.sqrt(25-(x-5)**2))*-1
        
        line1, =ax.plot(x[0],y[0],"white")
        line2, =ax.plot(x[0],y[0],"brown",marker='o',markersize=10,label="$planeta$")
        line3, =ax.plot(x2[1],y2[0],"white")
        ax.set_ylim(-5.1,5.1)
        ax.set_xlim(-0.1,10.1)
        ax.legend(framealpha=0.0)
        for i in range(len(x)):
            line1.set_data(x[:i],y[:i])
            line2.set_data(x[i],y[i])
            pl.pause(0.00000000000000000000000000000000000000000000001)
        for i in range(len(x2)):
            line3.set_data(x2[:i],y2[:i])
            line2.set_data(x2[i],y2[i])
            
            pl.pause(0.00000000000000000000000000000000000000000000001)    
        pl.close()
            
    
